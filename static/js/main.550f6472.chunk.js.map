{"version":3,"sources":["actions.js","Add.js","Link.js","LinkContainer.js","Links.js","Todo.js","VisibleTodos.js","VisibleTodoList.js","App.js","reducer.js","index.js"],"names":["ADD_ITEM","REMOVE_ITEM","CLEAR_ALL","TOGGLE_ITEM","SET_VISIBILITY_FILTER","VisibilityFilters","nextItemId","connect","props","input","Form","onSubmit","e","text","preventDefault","value","trim","dispatch","type","id","Row","className","placeholder","ref","node","Button","Link","Nav","Item","eventKey","filter","onClick","disabled","active","children","LinkContainer","state","ownProps","visibilityFilter","Links","variant","defaultActiveKey","Todo","style","margin","checked","completed","onChange","description","removeClick","VisibleTodos","Table","items","map","item","onCheckboxClick","colSpan","removeAll","getVisibleTodos","t","VisibleTodoList","toggleItem","removeItem","App","Col","Card","width","Body","Header","Text","textAlign","initialState","rootReducer","combineReducers","action","lastId","JSON","stringify","length","Object","assign","persistedState","serializedState","localStorage","getItem","parse","loadState","store","createStore","subscribe","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.550f6472.chunk.js","sourcesContent":["export const ADD_ITEM = 'ADD_ITEM';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const CLEAR_ALL = 'CLEAR_ALL';\r\nexport const EDIT_ITEM = 'EDIT_ITEM';\r\nexport const TOGGLE_ITEM = 'TOGGLE_ITEM';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\nexport function setVisibilityFilter(filter) {\r\n    return {\r\n        type: SET_VISIBILITY_FILTER,\r\n        filter\r\n    }\r\n}\r\n\r\nlet nextItemId = 0\r\nexport function addItem(text) {\r\n    return {\r\n        type: ADD_ITEM,\r\n        id: nextItemId++,\r\n        text\r\n    }\r\n}\r\n\r\nexport function toggleItem(id) {\r\n    return {\r\n        type: TOGGLE_ITEM,\r\n        id\r\n    }\r\n}\r\n\r\nexport function editItem(id, text) {\r\n    return {\r\n        type: EDIT_ITEM,\r\n        id,\r\n        text\r\n    }\r\n}\r\n\r\nexport function removeItem(id) {\r\n    return {\r\n        type: REMOVE_ITEM,\r\n        id\r\n    }\r\n}\r\n\r\nexport function clearAll() {\r\n    return {\r\n        type: CLEAR_ALL\r\n        \r\n    }\r\n}","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from './actions';\r\nimport './App.css';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst Add = (props) => {\r\n  let input;\r\n  return (\r\n    <>\r\n          <Form\r\n            onSubmit = {(e) => {\r\n              e.preventDefault();\r\n              if (!input.value.trim()) {\r\n                return;\r\n              }\r\n              props.dispatch(addItem(input.value));\r\n              input.value = \"\";\r\n            }}\r\n          >\r\n            <Row className = \"input-field\" >\r\n                <input placeholder = \"Add new task...\"\r\n                    ref = {(node) => {\r\n                    input = node\r\n                    }}\r\n                />\r\n            </Row>\r\n            <Row className = \"add-margin\">\r\n              <Button className=\"ml-5 blue-button\" type=\"submit\">\r\n                  Add\r\n              </Button>\r\n            </Row>  \r\n          </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect() (Add);","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nfunction Link(props) {\r\n  return (\r\n    <>\r\n      <Nav.Item>\r\n        <Nav.Link\r\n          eventKey={props.filter}\r\n          onClick={() => props.onClick()}\r\n          disabled={props.active}\r\n        >\r\n          \r\n          {props.children}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Link;\r\n","import { connect } from 'react-redux';\r\nimport { setVisibilityFilter } from './actions';\r\nimport Link from './Link';\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        active: ownProps.filter === state.visibilityFilter\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, ownProps) {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(setVisibilityFilter(ownProps.filter))\r\n        }    \r\n    };\r\n}\r\n\r\nconst LinkContainer = connect(mapStateToProps, mapDispatchToProps)(Link)\r\nexport default LinkContainer","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport LinkContainer from './LinkContainer';\r\nimport { VisibilityFilters } from './actions'\r\n\r\nfunction Links() {\r\n  return (\r\n    <>\r\n      <Nav className = \"links\" variant=\"tabs\" defaultActiveKey=\"ALL\">\r\n        <LinkContainer filter = {VisibilityFilters.SHOW_ALL}>ALL</LinkContainer>\r\n        <LinkContainer filter = {VisibilityFilters.SHOW_ACTIVE}>ACTIVE</LinkContainer>\r\n        <LinkContainer filter = {VisibilityFilters.SHOW_COMPLETED}>COMPLETED</LinkContainer>\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Links;\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport './App.css';\r\n\r\nfunction Todo(props) {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input type=\"checkbox\"\r\n        style = {{margin: \"0 10px\"}}\r\n        checked={props.completed}\r\n        onChange={props.onChange} />\r\n      </td>\r\n      <td className = \"task\">\r\n        {props.description}\r\n      </td>\r\n      <td>\r\n        <Button className = \"red-button\" variant=\"danger\" onClick={props.removeClick}>\r\n          remove\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Todo from \"./Todo\";\r\nimport './App.css';\r\n\r\nfunction VisibleTodos(props) {\r\n  return (\r\n    <>\r\n      <Table>\r\n        <thead>\r\n          <tr>\r\n            <th>Completed</th>\r\n            <th>Task</th>\r\n            <th ><span className = \"action\">Action</span></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.items.map((item) => (\r\n            <Todo\r\n              key={item.id}\r\n              {...item}\r\n              onChange={() => props.onCheckboxClick(item.id)}\r\n              removeClick={() => props.removeClick(item.id)}\r\n            />\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td colSpan=\"3\">\r\n              <Button className = \"red-button\" variant=\"danger\" onClick={props.removeAll}>\r\n                Clear All\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </Table>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default VisibleTodos;","import { connect } from 'react-redux'\r\nimport { toggleItem } from './actions'\r\nimport { removeItem } from './actions'\r\nimport { clearAll } from './actions'\r\nimport  VisibleTodos  from './VisibleTodos'\r\n\r\nfunction getVisibleTodos(items, filter) {\r\n    switch (filter) {\r\n        case 'SHOW_COMPLETED':\r\n            return items.filter((t) => t.completed);\r\n        case 'SHOW_ACTIVE':\r\n            return items.filter((t) => !t.completed);\r\n        case 'SHOW_ALL':\r\n        default:\r\n            return items;       \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        items: getVisibleTodos(state.items, state.visibilityFilter)\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onCheckboxClick: id => {\r\n            dispatch(toggleItem(id))\r\n        },\r\n        removeClick: id => {\r\n            dispatch(removeItem(id))\r\n        },\r\n        removeAll: () => {\r\n            dispatch(clearAll())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst VisibleTodoList = connect(mapStateToProps, mapDispatchToProps)(VisibleTodos)\r\n\r\nexport default VisibleTodoList","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Add from \"./Add\";\r\nimport './App.css';\r\nimport Links from \"./Links\";\r\nimport VisibleTodoList from \"./VisibleTodoList\";\r\n\r\nconst App = () => {\r\n  \r\n  return (\r\n    <>\r\n  <Row>\r\n    <Col className = \"col-3\">\r\n    </Col>\r\n    <Col>\r\n  <Card className = 'app-card' style={{width: '30rem'}}>\r\n    <Card.Body  >\r\n    <Card.Header className = 'todos-header'>My Todo List</Card.Header>\r\n      <Add />\r\n      <Links />\r\n      <VisibleTodoList />\r\n    <Card.Text style={{textAlign: 'justify'}}>\r\n    </Card.Text>\r\n    </Card.Body>\r\n  </Card>\r\n  </Col>\r\n</Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport {\r\n    VisibilityFilters,\r\n    ADD_ITEM,\r\n    REMOVE_ITEM,\r\n    CLEAR_ALL,\r\n    TOGGLE_ITEM,\r\n    SET_VISIBILITY_FILTER,\r\n} from './actions.js';\r\n\r\nfunction visibilityFilterReducer(state = VisibilityFilters.SHOW_ALL, action) {\r\n    switch (action.type) {\r\n        case SET_VISIBILITY_FILTER:\r\n            return action.filter\r\n        default:\r\n            return state\r\n    }\r\n}\r\nconst initialState = []\r\n\r\nfunction itemReducer(state = [], action) {\r\n    let lastId = 0\r\n    if (JSON.stringify(state) !== \"[]\"){\r\n        lastId = state[state.length - 1].id + 1\r\n    }\r\n    switch (action.type) {\r\n        case ADD_ITEM:      \r\n            return [\r\n                ...state,\r\n                {\r\n                    id: lastId,\r\n                    description: action.text,\r\n                    completed: false\r\n                }\r\n            ]\r\n        case REMOVE_ITEM:\r\n            return state.filter((value) => {\r\n                return action.id !== value.id;\r\n            })  \r\n        case TOGGLE_ITEM:\r\n            return state.map((item) => {\r\n                if (item.id === action.id) {\r\n                    return Object.assign({}, item, {\r\n                        completed: !item.completed\r\n                    })\r\n                } return item\r\n            })\r\n        case CLEAR_ALL:\r\n            return initialState\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    visibilityFilter: visibilityFilterReducer,\r\n    items: itemReducer,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { rootReducer } from './reducer';\n\nfunction loadState() {\n  const serializedState = localStorage.getItem('state');\n  if (!serializedState) {\n    return undefined;\n  }\n  return JSON.parse(serializedState);\n};\n\nconst persistedState = loadState()\nconst store = createStore(rootReducer, persistedState)\n\nfunction saveState(state) {\n  const serializedState = JSON.stringify(state);\n  localStorage.setItem('state', serializedState);\n}\n\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nReactDOM.render(\n  <Provider store = {store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}